[1mdiff --git a/blocks/models.py b/blocks/models.py[m
[1mindex a21ff0a..67df331 100644[m
[1m--- a/blocks/models.py[m
[1m+++ b/blocks/models.py[m
[36m@@ -1,19 +1,38 @@[m
[32m+[m[32mimport hashlib[m
 from django.db import models[m
 [m
 [m
 class GenesisBlock(models.Model):[m
     # A Singleton[m
[31m-[m
     def save(self, *args, **kwargs):[m
         self.pk = 1[m
[32m+[m[32m        block_data_hash = hashlib.sha256(str(self.index) + str(self.difficulty))[m
[32m+[m[32m        block_hash = hashlib.sha256(block_data_hash + str(self.nonce) + self.date_created)[m
[32m+[m
[32m+[m[32m        self.block_data_hash = block_data_hash[m
[32m+[m[32m        self.block_hash = block_hash[m
[32m+[m
         super(GenesisBlock, self).save(*args, **kwargs)[m
 [m
     def delete(self, *args, **kwargs):[m
         pass[m
 [m
[32m+[m[32m    index = models.IntegerField(default=0, null=True)[m
[32m+[m[32m    difficulty = models.SmallIntegerField(default=0)[m
[32m+[m[32m    mined_by = models.CharField(default="000000000000000000000000000", max_length=150)[m
[32m+[m[32m    nonce = models.IntegerField(default=0)[m
[32m+[m[32m    block_data_hash = models.CharField(blank=True, max_length=150)  # Merkle root included here[m
[32m+[m[32m    date_created = models.DateTimeField(null=True)[m
[32m+[m[32m    block_hash = models.CharField(blank=True, max_length=150)[m
[32m+[m
 [m
 class Block(models.Model):[m
[32m+[m[32m    index = models.IntegerField(null=True)[m
     block_hash = models.CharField(blank=True, max_length=150)[m
[32m+[m[32m    block_data_hash = models.CharField(blank=True, max_length=150)  # Merkle root included here[m
[32m+[m[32m    prev_block_hash = models.CharField(blank=True, max_length=150)[m
     difficulty = models.SmallIntegerField(null=True)[m
[31m-    # TODO falta todos los campos, el nodo utiliza latest()[m
[31m-[m
[32m+[m[32m    transactions = models.CharField(blank=True, max_length=10000)[m
[32m+[m[32m    mined_by = models.CharField(blank=True, max_length=150)[m
[32m+[m[32m    nonce = models.IntegerField(null=True)[m
[32m+[m[32m    date_created = models.DateTimeField(null=True)[m
[1mdiff --git a/django_blockchain/__pycache__/settings.cpython-36.pyc b/django_blockchain/__pycache__/settings.cpython-36.pyc[m
[1mindex 8c9791e..ae53ca7 100644[m
Binary files a/django_blockchain/__pycache__/settings.cpython-36.pyc and b/django_blockchain/__pycache__/settings.cpython-36.pyc differ
[1mdiff --git a/django_blockchain/urls.py b/django_blockchain/urls.py[m
[1mindex 6ce5e1b..df1157a 100644[m
[1m--- a/django_blockchain/urls.py[m
[1m+++ b/django_blockchain/urls.py[m
[36m@@ -16,6 +16,24 @@[m [mIncluding another URLconf[m
 from django.contrib import admin[m
 from django.urls import path[m
 [m
[32m+[m[32mfrom node import views as node_views[m
[32m+[m
 urlpatterns = [[m
     path('admin/', admin.site.urls),[m
[32m+[m[32m    path('/'),[m
[32m+[m[32m    # path('/debug'),[m
[32m+[m[32m    path('/debug/reset-chain', node_views.reset_chain, name='reset_chain'),[m
[32m+[m[32m    # path('/blocks'),[m
[32m+[m[32m    # path('/blocks/index'),[m
[32m+[m[32m    # path('/transactions/pending'),[m
[32m+[m[32m    # path('/transactions/confirmed'),[m
[32m+[m[32m    # path('/transactions/tran_hash'),[m
[32m+[m[32m    # path('/balances'),[m
[32m+[m[32m    # path('/address/address/balance'),[m
[32m+[m[32m    # path('/transactions/send'),[m
[32m+[m[32m    # path('/peers/'),[m
[32m+[m[32m    # path('/peers/connect/'),[m
[32m+[m[32m    # path('peers/notify-new-block'),[m
[32m+[m[32m    # path('/mining/get-mining-job/address'),[m
[32m+[m[32m    # path('/mining/submit-mined-block')[m
 ][m
[1mdiff --git a/node/views.py b/node/views.py[m
[1mindex 9975df3..82e6813 100644[m
[1m--- a/node/views.py[m
[1m+++ b/node/views.py[m
[36m@@ -7,12 +7,29 @@[m [mfrom merkletools import MerkleTools[m
 from datetime import datetime[m
 [m
 from transactions.models import Transaction[m
[31m-from blocks.models import Block[m
[32m+[m[32mfrom blocks.models import Block, GenesisBlock[m
 from node.models import Node[m
 [m
 [m
[31m-def add_transaction(request):[m
[31m-    # Adds a transaction to the memepool[m
[32m+[m[32mdef reset_chain(request):[m
[32m+[m[32m    # Resets the chain to the Genesis block. Erases all the transactions.[m
[32m+[m[32m    genesis_block, created = GenesisBlock.objects.get_or_create([m
[32m+[m[32m        index=0,[m
[32m+[m[32m        difficulty=0,[m
[32m+[m[32m        mined_by="000000000000000000000000000",[m
[32m+[m[32m        nonce=0,[m
[32m+[m[32m        date_created=datetime.today().isoformat()[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    all_transactions = Transaction.objects.all()[m
[32m+[m[32m    for transaction in all_transactions:[m
[32m+[m[32m        transaction.delete()[m
[32m+[m
[32m+[m[32m    return[m
[32m+[m
[32m+[m
[32m+[m[32mdef add_transaction_mempool(request):[m
[32m+[m[32m    # Adds a transaction to the mempool[m
     transaction = json.loads(request.POST.get('transaction_json'))[m
     public_key_string = transaction['public_key'][m
     transaction_hash = transaction['transaction_hash'][m
[36m@@ -48,6 +65,8 @@[m [mdef generate_block_header(request, node_id):[m
     # Get unconfirmed transactions[m
     transaction_list = Transaction.objects.filter(transfer_successful=False)[m
     last_mined_block = Block.objects.latest()[m
[32m+[m[32m    if not last_mined_block:[m
[32m+[m[32m        last_mined_block = GenesisBlock.objects.get(pk=1)[m
 [m
     # This node[m
     this_node = Node.objects.get(node_id=node_id)[m
[36m@@ -80,3 +99,19 @@[m [mdef generate_block_header(request, node_id):[m
 [m
     return pre_block_header[m
 [m
[32m+[m
[32m+[m[32mdef add_new_block(request):[m
[32m+[m[32m    block_data = request.POST.get('block_data')[m
[32m+[m[32m    block = Block.objects.craete([m
[32m+[m[32m        index=block_data['index'],[m
[32m+[m[32m        block_data_hash=block_data['block_data_hash'],[m
[32m+[m[32m        block_hash=block_data['block_hash'],[m
[32m+[m[32m        prev_block_hash=block_data['prev_block_hash'],[m
[32m+[m[32m        difficulty=block_data['difficulty'],[m
[32m+[m[32m        transactions=block_data['transactions'],[m
[32m+[m[32m        mined_by=block_data['mined_by'],[m
[32m+[m[32m        nonce=block_data['nonce'],[m
[32m+[m[32m        date_created=block_data['date_created'][m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    return block  # TODO revisar API[m
